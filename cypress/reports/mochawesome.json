{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-04-21T14:19:44.678Z",
    "end": "2022-04-21T14:21:04.785Z",
    "duration": 80107,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8b9123bc-d44f-4413-87a4-536f2c831fd8",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f9a2b9df-8633-49d9-a853-bc512f7ff2da",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 607,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "9f68a8d2-6f73-4785-899f-c72b17efca9b",
              "parentUUID": "f9a2b9df-8633-49d9-a853-bc512f7ff2da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f68a8d2-6f73-4785-899f-c72b17efca9b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a4810d24-0005-4279-8f21-6ec15903b0b4",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "d2b517a4-2e7e-40ae-b3ff-e44cdc8443f1",
              "parentUUID": "a4810d24-0005-4279-8f21-6ec15903b0b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "32d2680c-daca-4b37-b727-f00c685abff0",
              "parentUUID": "a4810d24-0005-4279-8f21-6ec15903b0b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "48bcede8-a6ce-42fe-b497-7cecdcff10c5",
              "parentUUID": "a4810d24-0005-4279-8f21-6ec15903b0b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 79,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "0c9c1fdf-fbf6-4c32-a71b-2489d81eb0a3",
              "parentUUID": "a4810d24-0005-4279-8f21-6ec15903b0b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "3c152bba-f59e-41e1-bf95-21bc242a1974",
              "parentUUID": "a4810d24-0005-4279-8f21-6ec15903b0b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "8b7876fa-e503-4499-92ac-be7b0e3a02c6",
              "parentUUID": "a4810d24-0005-4279-8f21-6ec15903b0b4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "7bfe840d-9ae5-4035-9b36-876d2d4270bd",
              "parentUUID": "a4810d24-0005-4279-8f21-6ec15903b0b4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2b517a4-2e7e-40ae-b3ff-e44cdc8443f1",
            "32d2680c-daca-4b37-b727-f00c685abff0",
            "48bcede8-a6ce-42fe-b497-7cecdcff10c5",
            "0c9c1fdf-fbf6-4c32-a71b-2489d81eb0a3",
            "3c152bba-f59e-41e1-bf95-21bc242a1974",
            "8b7876fa-e503-4499-92ac-be7b0e3a02c6",
            "7bfe840d-9ae5-4035-9b36-876d2d4270bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 628,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c967e7a0-e73d-4eb3-bdd5-9206b2d4146d",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 64,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "1bb251cb-76dc-4350-a5ce-ac99280024cc",
              "parentUUID": "c967e7a0-e73d-4eb3-bdd5-9206b2d4146d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 158,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "54654e19-7285-4525-b472-51d5eea8e5bd",
              "parentUUID": "c967e7a0-e73d-4eb3-bdd5-9206b2d4146d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1bb251cb-76dc-4350-a5ce-ac99280024cc",
            "54654e19-7285-4525-b472-51d5eea8e5bd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 222,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cada1193-5e1f-4771-8c19-bf4a477e328c",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 74,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "b1f4794a-1443-4822-a0fa-c16c3cb2438c",
              "parentUUID": "cada1193-5e1f-4771-8c19-bf4a477e328c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "b214ea14-3715-43e5-86b7-9a86ae0875b2",
              "parentUUID": "cada1193-5e1f-4771-8c19-bf4a477e328c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "980a843e-da1e-4582-b8e5-91b698d0cee0",
              "parentUUID": "cada1193-5e1f-4771-8c19-bf4a477e328c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "f43bd976-32a1-4ef7-9f0b-d5e9c1afb586",
              "parentUUID": "cada1193-5e1f-4771-8c19-bf4a477e328c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1f4794a-1443-4822-a0fa-c16c3cb2438c",
            "b214ea14-3715-43e5-86b7-9a86ae0875b2",
            "980a843e-da1e-4582-b8e5-91b698d0cee0",
            "f43bd976-32a1-4ef7-9f0b-d5e9c1afb586"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 371,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b3c83013-228d-4344-af01-9fa7bb3b1cc7",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "376ff770-2cac-4afd-bcf0-86b7353fa1ba",
              "parentUUID": "b3c83013-228d-4344-af01-9fa7bb3b1cc7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 211,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "54d12512-27c8-4ae2-8fc0-589eb3d3950f",
              "parentUUID": "b3c83013-228d-4344-af01-9fa7bb3b1cc7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "376ff770-2cac-4afd-bcf0-86b7353fa1ba",
            "54d12512-27c8-4ae2-8fc0-589eb3d3950f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c2107800-7b2f-4357-8520-b3fafa577b7d",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "020cfd34-6f66-4be1-8564-ba4598bed189",
              "parentUUID": "c2107800-7b2f-4357-8520-b3fafa577b7d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 68,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "e90eee08-0fc1-4885-b53e-a9d071b86e4b",
              "parentUUID": "c2107800-7b2f-4357-8520-b3fafa577b7d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "020cfd34-6f66-4be1-8564-ba4598bed189",
            "e90eee08-0fc1-4885-b53e-a9d071b86e4b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 135,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d63958af-06fe-4d7f-9d09-a62dfe82cf85",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "acad14c7-c835-47ed-96c5-dc5163931d91",
              "parentUUID": "d63958af-06fe-4d7f-9d09-a62dfe82cf85",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 9373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "f4383b75-3d87-4659-a90b-047140765f30",
              "parentUUID": "d63958af-06fe-4d7f-9d09-a62dfe82cf85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "acad14c7-c835-47ed-96c5-dc5163931d91",
            "f4383b75-3d87-4659-a90b-047140765f30"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9813,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f8e9f723-82d8-4a86-9140-7b587a30243a",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2289,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "a2df570c-e3e6-449f-b0e4-75399ce15dc5",
              "parentUUID": "f8e9f723-82d8-4a86-9140-7b587a30243a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8851,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "a4ecbef1-4946-4879-ae8f-53b038e9bc4f",
              "parentUUID": "f8e9f723-82d8-4a86-9140-7b587a30243a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1537,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "b477a0ab-9e2b-473b-b113-94dcbb47dfd5",
              "parentUUID": "f8e9f723-82d8-4a86-9140-7b587a30243a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2df570c-e3e6-449f-b0e4-75399ce15dc5",
            "a4ecbef1-4946-4879-ae8f-53b038e9bc4f",
            "b477a0ab-9e2b-473b-b113-94dcbb47dfd5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 12677,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1c758c83-266b-4c24-a102-e1178ca347e0",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "60340be5-fa2e-4fda-8835-b65cb473d1cf",
              "parentUUID": "1c758c83-266b-4c24-a102-e1178ca347e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 82,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "77b5d313-1183-4ff6-bbb9-7d78911826db",
              "parentUUID": "1c758c83-266b-4c24-a102-e1178ca347e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 67,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "0d99c943-e57d-4698-a10f-f089a0bced91",
              "parentUUID": "1c758c83-266b-4c24-a102-e1178ca347e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2578,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "32519c28-c9c0-4adc-9697-42e5468ec042",
              "parentUUID": "1c758c83-266b-4c24-a102-e1178ca347e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "60340be5-fa2e-4fda-8835-b65cb473d1cf",
            "77b5d313-1183-4ff6-bbb9-7d78911826db",
            "0d99c943-e57d-4698-a10f-f089a0bced91",
            "32519c28-c9c0-4adc-9697-42e5468ec042"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2840,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7a8169d9-6156-4fd3-a9c1-f61b3a4edbe9",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4233,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45883/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45883/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45883/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45883/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45883/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f8efbc0b-4fc3-480f-b399-4ea6edf8fbb7",
              "parentUUID": "7a8169d9-6156-4fd3-a9c1-f61b3a4edbe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4246,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45883/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45883/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45883/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45883/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45883/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b11476da-1bfe-4166-aa01-e95426376a09",
              "parentUUID": "7a8169d9-6156-4fd3-a9c1-f61b3a4edbe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4236,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45883/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45883/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45883/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45883/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45883/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d63e948f-abf9-4337-83d1-eda536127ea6",
              "parentUUID": "7a8169d9-6156-4fd3-a9c1-f61b3a4edbe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45883/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45883/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45883/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45883/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45883/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "62bdee42-33c5-4901-8896-334f6c32f4ac",
              "parentUUID": "7a8169d9-6156-4fd3-a9c1-f61b3a4edbe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4253,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45883/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45883/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45883/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45883/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45883/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "cef917d3-3d6e-40ca-8c9a-9732d8536e80",
              "parentUUID": "7a8169d9-6156-4fd3-a9c1-f61b3a4edbe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4261,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45883/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45883/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45883/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45883/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45883/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b3c4af1a-5152-4cae-b9a4-2007c1e7dc70",
              "parentUUID": "7a8169d9-6156-4fd3-a9c1-f61b3a4edbe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4204,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45883/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45883/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45883/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45883/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45883/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "0ffb5dcf-fc95-49a3-b13a-6215f36fdee8",
              "parentUUID": "7a8169d9-6156-4fd3-a9c1-f61b3a4edbe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4277,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45883/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45883/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45883/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45883/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45883/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "340137da-1535-4107-82ab-2caa0d0cb3e8",
              "parentUUID": "7a8169d9-6156-4fd3-a9c1-f61b3a4edbe9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4247,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45883/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45883/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45883/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45883/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45883/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "89f36dfb-ac2e-4c78-bc61-6f2424a749fa",
              "parentUUID": "7a8169d9-6156-4fd3-a9c1-f61b3a4edbe9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f8efbc0b-4fc3-480f-b399-4ea6edf8fbb7",
            "b11476da-1bfe-4166-aa01-e95426376a09",
            "d63e948f-abf9-4337-83d1-eda536127ea6",
            "62bdee42-33c5-4901-8896-334f6c32f4ac",
            "cef917d3-3d6e-40ca-8c9a-9732d8536e80",
            "b3c4af1a-5152-4cae-b9a4-2007c1e7dc70",
            "0ffb5dcf-fc95-49a3-b13a-6215f36fdee8",
            "340137da-1535-4107-82ab-2caa0d0cb3e8",
            "89f36dfb-ac2e-4c78-bc61-6f2424a749fa"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38236,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b4ecf210-75a2-4f4c-a75b-dafb481cda02",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4269,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45883/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45883/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45883/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45883/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45883/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "10c3ed35-3c47-4060-8a22-f3619e1fc1ea",
              "parentUUID": "b4ecf210-75a2-4f4c-a75b-dafb481cda02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4274,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45883/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45883/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45883/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45883/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45883/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "5623ef87-ab62-46af-884f-fcc3dd1d022f",
              "parentUUID": "b4ecf210-75a2-4f4c-a75b-dafb481cda02",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45883/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45883/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45883/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45883/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45883/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45883/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "d0882209-6890-49e7-b457-bdbc6e44b61b",
              "parentUUID": "b4ecf210-75a2-4f4c-a75b-dafb481cda02",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "10c3ed35-3c47-4060-8a22-f3619e1fc1ea",
            "5623ef87-ab62-46af-884f-fcc3dd1d022f",
            "d0882209-6890-49e7-b457-bdbc6e44b61b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12822,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e5f1cfc7-942d-483a-baba-195a3c2f3622",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 341,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45883/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45883/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45883/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45883/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45883/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45883/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45883/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "c1efb286-6a07-4243-83c9-69b84adad7e5",
              "parentUUID": "e5f1cfc7-942d-483a-baba-195a3c2f3622",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 299,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45883/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45883/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45883/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45883/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45883/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45883/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45883/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45883/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45883/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45883/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45883/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45883/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "ae377029-a306-4816-bfda-0b71a99d21d6",
              "parentUUID": "e5f1cfc7-942d-483a-baba-195a3c2f3622",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "c1efb286-6a07-4243-83c9-69b84adad7e5",
            "ae377029-a306-4816-bfda-0b71a99d21d6"
          ],
          "pending": [],
          "skipped": [],
          "duration": 640,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}